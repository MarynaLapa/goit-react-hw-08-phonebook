{"version":3,"file":"static/js/920.a0d00d16.chunk.js","mappings":"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","sources":["components/partsOfPage/SignContent.jsx","components/partsOfPage/validation/validationState.js","components/partsOfPage/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["\nconst SignContent = ({ title, description }) => {\n  return (\n    <>\n        <h2>{title}</h2>\n        <p>{description}</p>\n    </>\n  )\n}\n\nexport default SignContent","import { useEffect, useState } from \"react\"\n\nconst useValidation = (value, validations) => {\n    const [isEmpty, setIsEmpty] = useState(true) //Для перевірки поля на порожність\n    const [isEmptyError, setIsEmptyError] = useState('')\n    const [minLength, setMinLength] = useState(false) //Для перевірки поля на довжину введену у поле\n    const [minLengthError, setMinLengthError] = useState('') \n    const [maxLength, setMaxLength] = useState(false)\n    const [maxLengthError, setMaxLengthError] = useState('')\n    const [isEmailError, setIsEmailError] = useState(false) //email regaxp javascript \n    const [inValid, setInValid] = useState(false)\n\n    useEffect(() => {\n        //https://developer.mozilla.org/ru/docs/Learn/Forms/Form_validation   Валидацыя форми \n        //https://developer.mozilla.org/ru/docs/Web/JavaScript/Guide/Regular_expressions  Регулярное виражение!\n        \n        for (const validation in validations) {\n            \n            switch (validation) {\n                case 'minLength': // Якщо довжина теперішнього значення в імпуті менша чим значеня, яке зберігається обєкті вілідейшен за ключем валідейшен всьановлюємо помилку у значенні тру, інакше все ок\n                    if (value.length < validations[validation]) {\n                        setMinLength(true)\n                        setMinLengthError(`The password length should be between ${validations.minLength} and ${validations.maxLength} characters long`)\n                    } else {\n                        setMinLength(false)\n                        setMinLengthError('')\n                    } \n                    break\n                \n                case 'maxLength':\n                    if (value.length > validations[validation]) {\n                        setMaxLength(true)\n                        setMaxLengthError(`Password length must not exceed ${validations.maxLength} characters.`)\n                    } else {\n                        setMaxLength(false)\n                        setMaxLengthError('')\n                    } \n                    break\n                \n                case 'isEmpty':  // Якщо значення в імпуті існує все ок, інакше показуємо помилку. \n                    if (value) {\n                        setIsEmpty(false)\n                        setIsEmptyError('')\n                    } else {\n                        setIsEmpty(true)\n                        setIsEmptyError('Temptyhe field cannot be')\n                    }\n                    break\n                \n                case 'isEmail':\n                    const emailRegex =\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+[a-zA-Z0-9-.]+$\"\n                    emailRegex.test(String(value).toLowerCase()) ? setIsEmailError('') : setIsEmailError('Incorrectly entered password')\n                    break\n\n                default:\n                    return\n            }\n        }\n    }, [value, validations])\n\n   useEffect(() => {\n       if (isEmpty || isEmailError || minLength || maxLength) {\n           setInValid(false)\n       } else {\n           setInValid(true)           \n     }\n   \n   }, [isEmpty, isEmailError, minLength, maxLength])\n   \n    \n    return {\n        isEmpty,\n        isEmptyError,\n        minLength,\n        minLengthError,\n        maxLength,\n        maxLengthError,\n        isEmailError,\n        inValid\n    }\n}\n\nexport const useInput = (initialValue, validations) => {\n    const [value, setValue] = useState(initialValue) // Отримуэмо значення з імпута\n    const [isDirty, setIsDirty] = useState(false) //Клік в імпут. \n\n    const valid = useValidation(value, validations) //Отримуємо результат виконання функції юзВалідейшен\n\n    const onChange = (e) => {\n        setValue(e.target.value)\n    }\n\n    const onBlur = (e) => {\n        setIsDirty(true)\n    }\n\n    return {\n        value,\n        onChange,\n        onBlur,\n        isDirty,\n        ...valid\n    }\n}","\nimport { useInput } from \"../validation/validationState\"\nimport { Button, FormContainer } from \"../../styled/formStyled\"\n\nconst LoginForm = ({ login }) => {\n\n  const email = useInput('', {isEmpty: true, minLength: 3, isEmail: true})\n  const password = useInput('', {isEmpty: true, minLength: 7, maxLength: 12})\n\n  const handlerSubmit = (e) => {\n    e.preventDefault()\n\n    const form = new FormData(e.currentTarget)\n    const formData = {}\n    form.forEach((value, key) => {\n      formData[key] = value\n    })\n\n    login(formData)\n\n  }\n\n  return (\n   <FormContainer onSubmit={handlerSubmit}>\n      <h1 >Sign in</h1>\n      <div>\n        {(email.value.length > 0 ) && <label htmlFor='email'>Email</label>}\n        <input onChange={e => email.onChange(e)} onBlur={e => email.onBlur(e)} value={email.value} type=\"email\" name=\"email\" placeholder=\"Enter your email...\" id=\"email\" />\n        {(email.isDirty && email.isEmpty) && <span>{email.isEmptyError}</span>}\n        {(email.isDirty && email.minLength) && <span>Field length at least 3 characters</span>}\n        {(email.isDirty && email.isEmailError) && <span>{email.isEmailError}</span>}\n      </div>\n      \n      <div>\n        {(password.value.length > 0 ) && <label htmlFor='password'>Password</label>}\n        <input onChange={e => password.onChange(e)} onBlur={e => password.onBlur(e)} value={password.value} type=\"current-password\" name=\"password\" placeholder=\"Enter your password...\" id='password' />\n        {(password.isDirty && password.isEmpty) && <span>{password.isEmptyError}</span>}\n        {(password.isDirty && password.minLength) && <span>{password.minLengthError}</span>}\n        {(password.isDirty && password.maxLength) && <span>{password.maxLengthError}</span>}\n      </div>\n      <Button disabled={!email.inValid || !password.inValid} type={\"submit\"}>Log In</Button>\n    </FormContainer>\n  )\n}\n\nexport default LoginForm","import Container from \"components/partsOfPage/Container\"\nimport { Button, Wrap, WrapperStyled } from \"components/styled/formStyled\"\nimport { FormWrapper } from '../components/styled/formStyled';\nimport LoginForm from \"components/partsOfPage/LoginForm/LoginForm\"\nimport Section from \"components/partsOfPage/Section\"\n\nimport { useDispatch } from \"react-redux\"\nimport { loginThunk } from \"store/Auth/authThunk\"\nimport SignContent from './../components/partsOfPage/SignContent';\nimport { useNavigate } from \"react-router-dom\";\n\n\n\nconst LoginPage = () => {\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  const login = (body) => {\n    dispatch(loginThunk(body))\n    .unwrap()\n      .then((payload) => {\n        console.log('payload', payload)\n          navigate('/contacts')\n       })\n    .catch((error) => {})\n  }\n\n  return (\n    <Section>\n      <Container>\n        <Wrap >\n          <FormWrapper > \n            <LoginForm login={login} />\n          </FormWrapper>\n          <FormWrapper style={WrapperStyled}>\n            <SignContent title={'Hello, Friend!'} description={\"Enter your personal details and start journey with us\"} />\n            <Button onClick={()=> navigate('/register')}>Sing Up</Button>\n          </FormWrapper>\n        </Wrap>\n      </Container>\n    </Section>\n  )\n}\n\nexport default LoginPage\n"],"names":["_ref","title","description","_jsxs","_Fragment","children","_jsx","useInput","initialValue","validations","_useState17","useState","_useState18","_slicedToArray","value","setValue","_useState19","_useState20","isDirty","setIsDirty","valid","_useState","_useState2","isEmpty","setIsEmpty","_useState3","_useState4","isEmptyError","setIsEmptyError","_useState5","_useState6","minLength","setMinLength","_useState7","_useState8","minLengthError","setMinLengthError","_useState9","_useState10","maxLength","setMaxLength","_useState11","_useState12","maxLengthError","setMaxLengthError","_useState13","_useState14","isEmailError","setIsEmailError","_useState15","_useState16","inValid","setInValid","useEffect","validation","length","concat","test","String","toLowerCase","useValidation","_objectSpread","onChange","e","target","onBlur","login","email","isEmail","password","FormContainer","onSubmit","preventDefault","form","FormData","currentTarget","formData","forEach","key","htmlFor","type","name","placeholder","id","Button","disabled","navigate","useNavigate","dispatch","useDispatch","Section","Container","Wrap","FormWrapper","LoginForm","body","loginThunk","unwrap","then","payload","console","log","catch","error","style","WrapperStyled","SignContent","onClick"],"sourceRoot":""}