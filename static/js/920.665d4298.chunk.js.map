{"version":3,"file":"static/js/920.665d4298.chunk.js","mappings":"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","sources":["components/partsOfPage/Container.jsx","components/partsOfPage/SignContent.jsx","components/partsOfPage/validation/validationState.js","components/styled/style.jsx","components/partsOfPage/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import { Wrapper } from \"components/styled/style\"\n\nconst Container = ({children}) => {\n  return (\n    <Wrapper >{children}</Wrapper>\n  )\n}\n\nexport default Container","\nconst SignContent = ({ title, description }) => {\n  return (\n    <>\n        <h2>{title}</h2>\n        <p>{description}</p>\n    </>\n  )\n}\n\nexport default SignContent","import { useEffect, useState } from \"react\"\n\nconst useValidation = (value, validations) => {\n    const [isEmpty, setIsEmpty] = useState(true) //Для перевірки поля на порожність\n    const [isEmptyError, setIsEmptyError] = useState('')\n    const [minLength, setMinLength] = useState(false) //Для перевірки поля на довжину введену у поле\n    const [minLengthError, setMinLengthError] = useState('') \n    const [maxLength, setMaxLength] = useState(false)\n    const [maxLengthError, setMaxLengthError] = useState('')\n    // const [isEmailError, setIsEmailError] = useState(false) //email regaxp javascript \n    const [inValid, setInValid] = useState(false)\n\n    useEffect(() => {\n        //https://developer.mozilla.org/ru/docs/Learn/Forms/Form_validation   Валидацыя форми \n        //https://developer.mozilla.org/ru/docs/Web/JavaScript/Guide/Regular_expressions  Регулярное виражение!\n        \n        for (const validation in validations) {\n            \n            switch (validation) {\n                case 'minLength': // Якщо довжина теперішнього значення в імпуті менша чим значеня, яке зберігається обєкті вілідейшен за ключем валідейшен всьановлюємо помилку у значенні тру, інакше все ок\n                    if (value.length < validations[validation]) {\n                        setMinLength(true)\n                        setMinLengthError(`The password length should be between ${validations.minLength} and ${validations.maxLength} characters long`)\n                    } else {\n                        setMinLength(false)\n                        setMinLengthError('')\n                    } \n                    break\n                \n                case 'maxLength':\n                    if (value.length > validations[validation]) {\n                        setMaxLength(true)\n                        setMaxLengthError(`Password length must not exceed ${validations.maxLength} characters.`)\n                    } else {\n                        setMaxLength(false)\n                        setMaxLengthError('')\n                    } \n                    break\n                \n                case 'isEmpty':  // Якщо значення в імпуті існує все ок, інакше показуємо помилку. \n                    if (value) {\n                        setIsEmpty(false)\n                        setIsEmptyError('')\n                    } else {\n                        setIsEmpty(true)\n                        setIsEmptyError('Temptyhe field cannot be')\n                    }\n                    break\n                \n                // case 'isEmail':\n                    // const emailRegex =\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$\" ///Потрібно доопрацювати \n                    // emailRegex.test(String(value).toLowerCase()) ? setIsEmailError('') : setIsEmailError('Incorrectly entered password')\n                    // break\n\n                default:\n                    return\n            }\n        }\n    }, [value, validations])\n\n   useEffect(() => {\n       if (isEmpty  || minLength || maxLength) {\n           setInValid(false)\n       } else {\n           setInValid(true)           \n       }\n    //    || isEmailError\n   \n   }, [isEmpty, minLength, maxLength])\n   \n    \n    return {\n        isEmpty,\n        isEmptyError,\n        minLength,\n        minLengthError,\n        maxLength,\n        maxLengthError,\n        inValid\n    }\n}\n\nexport const useInput = (initialValue, validations) => {\n    const [value, setValue] = useState(initialValue) // Отримуэмо значення з імпута\n    const [isDirty, setIsDirty] = useState(false) //Клік в імпут. \n\n    const valid = useValidation(value, validations) //Отримуємо результат виконання функції юзВалідейшен\n\n    const onChange = (e) => {\n        setValue(e.target.value)\n    }\n\n    const onBlur = (e) => {\n        setIsDirty(true)\n    }\n\n    return {\n        value,\n        onChange,\n        onBlur,\n        isDirty,\n        ...valid\n    }\n}","import styled from 'styled-components';\n \nconst Wrapper = styled.div`\n    padding: 0 32px;\n    width: 1460px;\n    margin: 0 auto;\n`\n\nconst List = styled.ul`\n    position: relative;\n    display: table-cell;\n    font-size: 24px;\n    text-transform: capitalize;\n    list-style: none;\n    span::before {\n        content: '';\n        margin-right: 8px;\n        display: inline-block;\n        width: 12px;\n        height: 12px;\n        border-radius: 50%;\n        background-color: #6f6ffa;\n\n    }\n    li:not(:last-child) {\n        padding-bottom: 8px; \n    }\n    span {\n        vertical-align: middle;\n        padding-right: 12px;\n    } \n`;\n\nconst InputContainer = styled.div`\n    display: flex;\n    width: 320px;\n    flex-direction: column;\n    align-items: flex-start;\n    text-transform: capitalize;\n    gap: 4px;\n    input {\n        width: 100%;\n        margin-bottom: 8px;\n        border-radius: 4px;\n        border: 1px solid #dbdbeb;\n        outline: none;\n        font-size: 16px;\n        text-transform: capitalize;\n        background-color: white;;\n        padding: 12px 15px;\n        margin: 8px 0;\n        width: 100%;\n        border-radius: 4px;\n    }\n    label {\n        font-style: italic;\n    }\n`;\n\nconst Container = styled.div`\n    margin: 20px;\n`;\n\nconst FormStyled = styled.form`\n    text-align: center;\n    /* background: #fff; */\n    display: flex;\n    flex-direction: column;\n    padding: 0 50px;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    background: rgba(0, 0, 0, 0);\n`; \n\nexport { Wrapper, List, InputContainer, Container, FormStyled}","\nimport { useInput } from \"../validation/validationState\"\nimport { Button, FormContainer } from \"../../styled/formStyled\"\n\nconst LoginForm = ({ login }) => {\n\n  const email = useInput('', {isEmpty: true, minLength: 3, isEmail: true})\n  const password = useInput('', {isEmpty: true, minLength: 7, maxLength: 12})\n\n  const handlerSubmit = (e) => {\n    e.preventDefault()\n\n    const form = new FormData(e.currentTarget)\n    const formData = {}\n    form.forEach((value, key) => {\n      formData[key] = value\n    })\n\n    login(formData)\n\n  }\n\n  return (\n   <FormContainer onSubmit={handlerSubmit}>\n      <h1 >Sign in</h1>\n      <div>\n        {(email.value.length > 0 ) && <label htmlFor='email'>Email</label>}\n        <input onChange={e => email.onChange(e)} onBlur={e => email.onBlur(e)} value={email.value} type=\"email\" name=\"email\" placeholder=\"Enter your email...\" id=\"email\" required/>\n        {(email.isDirty && email.isEmpty) && <span>{email.isEmptyError}</span>}\n        {(email.isDirty && email.minLength) && <span>Field length at least 3 characters</span>}\n        {/* {(email.isDirty && email.isEmailError) && <span>{email.isEmailError}</span>} */}\n      </div>\n      \n      <div>\n        {(password.value.length > 0 ) && <label htmlFor='password'>Password</label>}\n        <input onChange={e => password.onChange(e)} onBlur={e => password.onBlur(e)} value={password.value} type=\"password\" name=\"password\" placeholder=\"Enter your password...\" id='password' />\n        {(password.isDirty && password.isEmpty) && <span>{password.isEmptyError}</span>}\n        {(password.isDirty && password.minLength) && <span>{password.minLengthError}</span>}\n        {(password.isDirty && password.maxLength) && <span>{password.maxLengthError}</span>}\n      </div>\n      <Button disabled={!email.inValid || !password.inValid} type={\"submit\"}>Log In</Button>\n    </FormContainer>\n  )\n}\n\nexport default LoginForm","import Container from \"components/partsOfPage/Container\"\nimport { Button, SectionContacts, Wrap, WrapperStyled } from \"components/styled/formStyled\"\nimport { FormWrapper } from '../components/styled/formStyled';\nimport LoginForm from \"components/partsOfPage/LoginForm/LoginForm\"\n\nimport { useDispatch } from \"react-redux\"\nimport { loginThunk } from \"store/Auth/authThunk\"\nimport SignContent from './../components/partsOfPage/SignContent';\nimport { useNavigate } from \"react-router-dom\";\nimport { Notify } from \"notiflix\";\n\n\n\nconst LoginPage = () => {\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  const login = (body) => {\n    dispatch(loginThunk(body))\n    .unwrap()\n      .then((payload) => {\n        navigate('/contacts')\n        Notify.success(`Welcome, ${payload.user.name}!`)\n       })\n      .catch((error) => {\n        Notify.failure('Error while logging in. Please check your entered data and try again')\n    })\n  }\n\n  return (\n    <SectionContacts>\n      <Container>\n        <Wrap >\n          <FormWrapper > \n            <LoginForm login={login} />\n          </FormWrapper>\n          <FormWrapper style={WrapperStyled}>\n            <SignContent title={'Hello, Friend!'} description={\"Enter your personal details and start journey with us\"} />\n            <Button onClick={()=> navigate('/register')}>Sing Up</Button>\n          </FormWrapper>\n        </Wrap>\n      </Container>\n    </SectionContacts>\n  )\n}\n\nexport default LoginPage\n"],"names":["_ref","children","_jsx","Wrapper","title","description","_jsxs","_Fragment","useInput","initialValue","validations","_useState15","useState","_useState16","_slicedToArray","value","setValue","_useState17","_useState18","isDirty","setIsDirty","valid","_useState","_useState2","isEmpty","setIsEmpty","_useState3","_useState4","isEmptyError","setIsEmptyError","_useState5","_useState6","minLength","setMinLength","_useState7","_useState8","minLengthError","setMinLengthError","_useState9","_useState10","maxLength","setMaxLength","_useState11","_useState12","maxLengthError","setMaxLengthError","_useState13","_useState14","inValid","setInValid","useEffect","validation","length","concat","useValidation","_objectSpread","onChange","e","target","onBlur","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","InputContainer","_templateObject3","Container","_templateObject4","FormStyled","_templateObject5","login","email","isEmail","password","FormContainer","onSubmit","preventDefault","form","FormData","currentTarget","formData","forEach","key","htmlFor","type","name","placeholder","id","required","Button","disabled","navigate","useNavigate","dispatch","useDispatch","SectionContacts","Wrap","FormWrapper","LoginForm","body","loginThunk","unwrap","then","payload","Notify","user","catch","error","style","WrapperStyled","SignContent","onClick"],"sourceRoot":""}